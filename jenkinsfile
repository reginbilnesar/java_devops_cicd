pipeline {
    agent any 

    parameters {
        choice(name: 'action', choices: ['create', 'delete'], description: 'Choose create/Delete')
    }

    stages {
        stage('Git Checkout') {
            when { expression { params.action == 'create' } }
            steps {
                script {
                    git url: 'https://github.com/reginbilnesar/java_devops_cicd.git', branch: 'main'
                }
            }
        }

        stage('Unit Test using Maven') {
            when { expression { params.action == 'create' } }
            steps {
                dir('mrdevops_java_app-main') {
                    sh 'mvn test'
                }
            }
        }

        stage('Integration Test using Maven') {
            when { expression { params.action == 'create' } }
            steps {
                dir('mrdevops_java_app-main') {
                    sh 'mvn verify'
                }
            }
        }

        stage('Quality Test using Maven-Sonar') {
            when { expression { params.action == 'create' } }
            steps {
                dir('mrdevops_java_app-main') {
                    sh 'mvn clean package sonar:sonar'
                }
            }
        }

        stage('Quality Gate') {
            when { expression { params.action == 'create' } }
            steps {
                script {
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
            }
        }
    }
}
